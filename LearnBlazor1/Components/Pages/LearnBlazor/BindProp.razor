@page "/learnBlazor/bindprop"

<div class="row">
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Details</h3>
        <hr />
        Is Active: <input type="checkbox" @bind="@_product.IsActive" @bind:event="oninput" />
        <br />
        Input Price: <input type="number" @bind="@_product.Price" @bind:event="oninput" />
        <br />
        <br />
        Product Properties:
        <select @bind="_selectedProperty">
            @foreach (var prop in _product.ProductProperties)
            {
                <option value="@prop.Key">@prop.Key</option>
            }
        </select>
    </div>
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Summary</h3>
        <hr />
        Name: @_product.Name<br />
        Is Active: @_product.IsActive
        <br />
        Price: @_product.Price.ToString("C")
        <br />
        This product is: @(_product.IsActive ? "Active" : "Inactive")<br />
        Selected Property: @_selectedProperty <br />
        @if (!string.IsNullOrWhiteSpace(_selectedProperty))
        {
            <p>Selected Property: @_product.ProductProperties.FirstOrDefault(p => p.Key == _selectedProperty).Value</p>
        }
    </div>
    <div class="col-12 border p-4">
        <h3 class="text-success">Product Table</h3>
        <table class="table table-striped">
            <thead>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Is Active</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var prod in ProductList)
            {
                <tr>
                    <td><input type="text" @bind="@prod.Name" @bind:event="oninput" /></td>
                    <td><input type="text" @bind="@prod.Price" @bind:event="oninput" /></td>
                    <td><input type="checkbox" @bind="@prod.IsActive" /></td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    <div class="col-12 border p-4">
        <h3 class="text-primary">Product Summary</h3>
        @foreach (var prod in ProductList)
        {
            <p>@prod.Name [@prod.Price] is @(prod.IsActive ? "Active" : "Inactive")</p>
        }
    </div>
</div>

@code {
    private string _selectedProperty = string.Empty;

    Product _product = new()
    {
        Id = 1,
        Name = "Product 1",
        Price = 5,
        IsActive = true,
        ProductProperties = [
            new ProductProperty() { Id = 1, Key = "Color", Value = "Red"},
            new ProductProperty() { Id = 1, Key = "Color", Value = "Green"},
            new ProductProperty() { Id = 1, Key = "Color", Value = "Blue"},
            new ProductProperty() { Id = 2, Key = "Size", Value = "Small"},
            new ProductProperty() { Id = 2, Key = "Size", Value = "Medium"},
            new ProductProperty() { Id = 2, Key = "Size", Value = "Large"},
            new ProductProperty() { Id = 2, Key = "Flavor", Value = "Strawberry"},
            new ProductProperty() { Id = 2, Key = "Flavor", Value = "Lemon"},
            new ProductProperty() { Id = 2, Key = "Flavor", Value = "Chocolate"},
        ]
    };

    List<Product> ProductList = [];

    protected override void OnInitialized()
    {
        ProductList.Add(new Product()
        {
            Id = 1,
            Name = "Midnight Blaze",
            Price = 5.99,
            IsActive = false,
            ProductProperties = [
                new ProductProperty() { Id = 1, Key = "Color", Value = "Red"},
                new ProductProperty() { Id = 1, Key = "Color", Value = "Green"},
                new ProductProperty() { Id = 1, Key = "Color", Value = "Blue"},
                new ProductProperty() { Id = 2, Key = "Size", Value = "Small"},
                new ProductProperty() { Id = 2, Key = "Size", Value = "Medium"},
                new ProductProperty() { Id = 2, Key = "Size", Value = "Large"},
                new ProductProperty() { Id = 2, Key = "Flavor", Value = "Strawberry"},
                new ProductProperty() { Id = 2, Key = "Flavor", Value = "Lemon"},
                new ProductProperty() { Id = 2, Key = "Flavor", Value = "Chocolate"},
            ]
        });

        ProductList.Add(new Product()
        {
            Id = 2,
            Name = "Blossom Lily",
            Price = 10.59,
            IsActive = true,
            ProductProperties = [
                new ProductProperty() { Id = 1, Key = "Color", Value = "Red"},
                new ProductProperty() { Id = 1, Key = "Color", Value = "Green"},
                new ProductProperty() { Id = 1, Key = "Color", Value = "Blue"},
                new ProductProperty() { Id = 2, Key = "Size", Value = "Small"},
                new ProductProperty() { Id = 2, Key = "Size", Value = "Medium"},
                new ProductProperty() { Id = 2, Key = "Size", Value = "Large"},
                new ProductProperty() { Id = 2, Key = "Flavor", Value = "Strawberry"},
                new ProductProperty() { Id = 2, Key = "Flavor", Value = "Lemon"},
                new ProductProperty() { Id = 2, Key = "Flavor", Value = "Chocolate"},
            ]
        });
    }

}
